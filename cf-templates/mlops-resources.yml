AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Username:
    Type: String
    Default: dev

  LambdaVersion:
    Description: git hash of lambda verisons to be deployed
    Type: String

Resources:
    MLArtifactStore:
      Type: AWS::S3::Bucket
      Properties: 
        BucketName: !Sub ${Username}-s3-ml-artifact
        AccessControl: Private
        VersioningConfiguration:
          Status: Enabled

    MLOpsBucket:
        Type: AWS::S3::Bucket
        Properties: 
          BucketName: !Sub ${Username}-s3-ml-dataset
          AccessControl: Private
          VersioningConfiguration:
            Status: Enabled

    LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${Username}-iam-lambda
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Path: /service-role/
        Policies:
          -
            PolicyName: "CodeBuildAccessPolicies"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "*"
                  Resource:
                    - "*"
    
    LambdaFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub ${Username}-lambda-test
        Description: A test lambda
        Runtime: python3.7
        Code:
          S3Bucket: !Sub ${Username}-s3-lambda-deployment
          S3Key: !Sub test/${LambdaVersion}.zip
        Handler: function.lambda_handler
        Role:
          Fn::GetAtt:
            - LambdaRole
            - Arn
      DependsOn: LambdaRole

    MLOpsPipelineRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${Username}-iam-pipeline
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "codepipeline.amazonaws.com"
                  - "codebuild.amazonaws.com"
                  - "codedeploy.amazonaws.com"
                  - "cloudformation.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Path: /service-role/
        Policies:
          -
            PolicyName: "CodeBuildAccessPolicies"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "*"
                  Resource:
                    - "*"

    Pipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        ArtifactStore: 
          Location: !Ref MLArtifactStore
          Type: S3
        Name: !Sub ${Username}-mlops-pipeline
        RoleArn: !GetAtt MLOpsPipelineRole.Arn
        Stages:
          - Name: Source
            Actions:
              - Name: S3
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: S3
                  Version: 1
                Configuration: 
                  BucketName: craig-s3-ml-dataset
                  Extract: true
                OutputArtifacts:
                  - Name: Test
                RunOrder: 1