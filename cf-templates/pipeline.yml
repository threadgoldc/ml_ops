AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Username:
    Type: String

  GitBranchName:
    Type: String
    Default: prod

Resources:

  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub ${Username}-s3-pipeline-artifact
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  LambdaDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub ${Username}-s3-lambda-deployment
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Username}-iam-codebuild
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
                - "codebuild.amazonaws.com"
                - "codedeploy.amazonaws.com"
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        -
          PolicyName: "CodeBuildAccessPolicies"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "*"
                Resource:
                  - "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Username}-codebuild
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        BuildSpec: buildspecs/build_artifacts.yml
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0

  # CodeBuildProjectDevCommit:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Sub ${Username}-codebuild-dev-commit
  #     ServiceRole: !GetAtt CodeBuildServiceRole.Arn
  #     Artifacts:
  #       Type: no_artifacts
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
  #     Source:
  #       Auth:
  #         Type: OAUTH
  #       Location: https://github.com/threadgoldc/ml_ops.git
  #       Type: GITHUB

  AppPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: '{{resolve:ssm:github:1}}'
      Filters:
        - 
          JsonPath: "$.ref"
          MatchEquals: !Sub refs/heads/${GitBranchName}
      TargetPipeline: !Ref Pipeline
      TargetAction: GithubRepo
      Name: PipelineWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore: 
        Location: !Ref PipelineBucket
        Type: S3
      Name: !Sub ${Username}-pipeline
      RoleArn: !GetAtt CodeBuildServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GithubRepo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration: 
                Owner: "threadgoldc"
                Repo: "ml_ops"
                PollForSourceChanges: "false"
                Branch: !Sub "${GitBranchName}"
                OAuthToken: '{{resolve:ssm:github:1}}'
              OutputArtifacts:
                - Name: Source
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: BuildImage
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                  ProjectName:
                    Ref: CodeBuildProject
              OutputArtifacts:
                - Name: CFParameters
              RunOrder: 2

        - Name: Deploy
          Actions:
            - Name: DeployLambdas
              InputArtifacts:
                - Name: Source
                - Name: CFParameters
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                - Name: DeployStack
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn:
                  Fn::GetAtt: [ CodeBuildServiceRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub ${Username}-mlops-resources
                TemplateConfiguration: CFParameters::cf-templates-params/mlops-resources.json
                TemplatePath: Source::cf-templates/mlops-resources.yml
              RunOrder: 3
        # - 
        #   Name: MRToDevApproval
        #   Actions:
        #     -
        #       Name: MRToDevApprovalAction
        #       ActionTypeId:
        #         Category: Approval
        #         Owner: AWS
        #         Version: 1
        #         Provider: Manual
        #       Configuration:
        #           CustomData: 'Do you want to commit this change to Dev?'
        #       RunOrder: 4

Outputs:
  UsernameOutput:
    Value: !Sub ${Username}